#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram Post Copier
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e

echo "=============================================="
echo "ü¶Ñ Telegram Post Copier - Quick Setup"
echo "=============================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
OS="$(uname -s)"
case "${OS}" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    *)          MACHINE="UNKNOWN:${OS}"
esac

echo "üñ•Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $MACHINE"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if command_exists python3; then
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)
    echo "‚úÖ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PYTHON_VERSION"
else
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.10+: https://www.python.org/downloads/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
echo ""
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ pip..."
if command_exists pip3; then
    echo "‚úÖ pip —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: python3 -m ensurepip"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo ""
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command_exists docker; then
    DOCKER_VERSION=$(docker --version | cut -d' ' -f3 | tr -d ',')
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $DOCKER_VERSION"
    DOCKER_INSTALLED=true
else
    echo "‚ö†Ô∏è  Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–°–∫–∞—á–∞–π—Ç–µ —Å https://www.docker.com/products/docker-desktop"
    DOCKER_INSTALLED=false
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if [ "$DOCKER_INSTALLED" = true ]; then
    if command_exists docker-compose; then
        echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ö†Ô∏è  Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Tesseract
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Tesseract OCR..."
if command_exists tesseract; then
    TESSERACT_VERSION=$(tesseract --version | head -n1)
    echo "‚úÖ Tesseract —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $TESSERACT_VERSION"
else
    echo "‚ö†Ô∏è  Tesseract –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    if [ "$MACHINE" = "Linux" ]; then
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install tesseract-ocr tesseract-ocr-rus"
    elif [ "$MACHINE" = "Mac" ]; then
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install tesseract tesseract-lang"
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    echo "‚ÑπÔ∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ —à–∞–±–ª–æ–Ω–∞
echo ""
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cp env.example .env
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    echo ""
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏!"
    echo "   nano .env"
else
    echo "‚ÑπÔ∏è  .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p temp processed_images logs
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo ""
echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chmod 600 .env 2>/dev/null || true
chmod 600 *.session 2>/dev/null || true
echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

echo ""
echo "=============================================="
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=============================================="
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo ""
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª:"
echo "   nano .env"
echo ""
echo "2. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–ª—é—á–∏:"
echo "   - API_ID –∏ API_HASH (–æ—Ç my.telegram.org)"
echo "   - LLM API –∫–ª—é—á (DeepSeek/OpenAI/xAI)"
echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª—ã"
echo ""
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
echo "   source venv/bin/activate"
echo "   python copier.py"
echo ""
echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker:"
echo "   docker-compose up -d"
echo ""
echo "üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –≤ README.md"
echo ""
echo "ü¶Ñ –£–¥–∞—á–∏ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞!"

